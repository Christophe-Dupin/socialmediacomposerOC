version: "3.7"

services:
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      cache_from:
        - "${WEB_IMAGE}"
    image: "${WEB_IMAGE}"
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/usr/src/app/staticfiles

    ports:
      - "8000:8000"
    networks: ["mynetwork"]
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
  postgres:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    networks: ["mynetwork"]
    container_name: postgres

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      cache_from:
        - "${NGINX_IMAGE}"
    image: "${NGINX_IMAGE}"
    volumes:
      - static_volume:/usr/src/app/staticfiles
    ports:
      - 80:80
    depends_on:
      - django

volumes:
  static_volume:
  postgres_data:
networks: { mynetwork: {} }
